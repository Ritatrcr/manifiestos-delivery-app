name: Package & Publish Helm (in manifests repo)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  package_publish:
    runs-on: ubuntu-latest

    env:
      HELM_CHART_DIR: charts/pedido-app
      HELM_CHART_NAME: pedido-app
      HELM_REPO_URL: https://ritatrcr.github.io/manifiestos-delivery-app/  # URL de Pages de ESTE repo

    steps:
      - name: Checkout manifests repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_HELMCHART }}

      - name: Install Helm & yq
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Install yq
        shell: bash
        run: |
          set -euxo pipefail
          YQ_VERSION=v4.44.3
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          helm version && yq --version

      # ====== LINT & PACKAGE ======
      - name: Lint chart
        shell: bash
        run: |
          set -euxo pipefail
          cd "${HELM_CHART_DIR}"
          helm lint .

      - name: Package chart into root
        id: pkg
        shell: bash
        run: |
          set -euxo pipefail
          cd "${HELM_CHART_DIR}"
          helm package . -d "$GITHUB_WORKSPACE"

          # Detectar el tgz mÃ¡s reciente
          PKG_PATH="$(ls -1t "$GITHUB_WORKSPACE/${HELM_CHART_NAME}-"*.tgz | head -n 1)"
          test -f "$PKG_PATH"
          echo "PKG_PATH=$PKG_PATH" >> "$GITHUB_OUTPUT"
          echo "PKG_PATH=$PKG_PATH"

          PKG_FILE="$(basename "$PKG_PATH")"
          CHART_VERSION="${PKG_FILE#${HELM_CHART_NAME}-}"
          CHART_VERSION="${CHART_VERSION%.tgz}"
          echo "CHART_VERSION=$CHART_VERSION" >> "$GITHUB_OUTPUT"
          echo "CHART_VERSION=$CHART_VERSION"

      - name: Assert values-dev/prod inside tgz
        shell: bash
        run: |
          set -euxo pipefail
          tar -tzf "${{ steps.pkg.outputs.PKG_PATH }}" | grep -E 'values-(dev|prod)\.yaml'

      # ====== INDEX (merge) ======
      - name: Update Helm repo index
        shell: bash
        run: |
          set -euxo pipefail
          if [ -f index.yaml ]; then
            helm repo index . --url "${HELM_REPO_URL}" --merge index.yaml
          else
            helm repo index . --url "${HELM_REPO_URL}"
          fi
          head -n 20 index.yaml

      # ====== COMMIT & PUSH ======
      - name: Commit & push changes (with PAT)
        shell: bash
        env:
          PAT_USER: ritatrcr   # ej: ritatrcr
          PAT_TOKEN: ${{ secrets.PAT_HELMCHART }}       # tu PAT con RW
        run: |
          set -euxo pipefail
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git add *.tgz index.yaml
          git commit -m "Publish chart ${HELM_CHART_NAME} ${{ steps.pkg.outputs.CHART_VERSION }}" || echo "No commit needed"
          # Fuerza el remoto a https con usuario+PAT (evita 403)
          git remote set-url origin "https://${PAT_USER}:${PAT_TOKEN}@github.com/${{ github.repository }}.git"
          git push origin main
